<route tag="504" title="504-King" color="ff0000" oppositeColor="ffffff" latMin="43.63655" latMax="43.6775399" lonMin="-79.45353" lonMax="-79.34996">
  <stop tag="14186" title="Dundas West Station" lat="43.6567799" lon="-79.45353" stopId="14665"/>
<direction tag="504_1_504" title="West - 504 King towards Dundas West Station via King" name="West" useForUI="true" branch="504">
  <stop tag="14161"/>


<direction tag="5_0_5B" title="South - 5b Avenue Rd towards Gerrard" name="South" useForUI="true" branch="5B">

API we need:


Input: lat, lng

- find n closest stops to that lat, lng
- for each stop, find the directions(s) that contain it (may be unique, but titles may be common)
- return
    - collection of "stop title", each one containing:
      - (stop tag)
      - direction title
      - direction name
      - route title
      - (route tag)


rails g model Stop tag:string lat:float lng:float
rails g model Route tag:string, title:string
rails g model Direction title:string route:references
rails g migration AssociateDirectionsAndStops



Ideally we'd store
{
 (lat,lng) => {
   stop_title =>  [
                      { stop tag, direciton title, route title, route tag }
                      { stop tag, direciton title, route_title route tag }
                      { stop tag, direciton title, route title, route tag }
                    ]} ,
   stop_title =>
     ...
 },
 (lat,lng) => {
   ..
  }
}

struct stop_route {
  char* stop_tag;
  char* route_tag;
  char* title;
  char* description;
}

struct stop {
  double lat;
  double lng;
  stop_route stop_routes[];
}


pebblettc.chester.me/
{
  groups: {

  }



}

but we'd need fast search on lat,lng (smaller distance)




Capturing the info:
  http://webservices.nextbus.com/service/publicXMLFeed?command=routeList&a=ttc

  <body copyright="All data copyright Toronto Transit Commission 2016.">
    <route tag="5" title="5-Avenue Rd"/><route tag="6" title="6-Bay"/>
    <route tag="7" title="7-Bathurst"/>
    ...

  For each above: http://webservices.nextbus.com/service/publicXMLFeed?command=routeConfig&a=ttc&r=<route tag>&terse
  <body ...>
    <route tag="509" title="509-Harbourfront" color="ff0000" oppositeColor="ffffff" latMin="43.63412" latMax="43.6456599" lonMin="-79.4187899" lonMax="-79.37709">
      <stop tag="15276" title="Fleet St At Bastion St" lat="43.6359399" lon="-79.40348" stopId="15453"/>
      <stop ... >
      ...
      <direction tag="509_1_209" title="West - 509/511 Replacement Bus towards Lake Shore and Bathurst" name="West" useForUI="true" branch="509/">
        <stop tag="14629"/>
        <stop tag="15276"/>
        ...
      <direction ...>
        ...



[stop title]
Route Title
Direction Title         (link: stop/route tag)

<route tag="509" title="509-Harbourfront" color="ff0000" oppositeColor="ffffff" latMin="43.63412" latMax="43.6456599" lonMin="-79.4187899" lonMax="-79.37709">
<stop tag="15276" title="Fleet St At Bastion St" lat="43.6359399" lon="-79.40348" stopId="15453"/>
<direction tag="509_1_209" title="West - 509/511 Replacement Bus towards Lake Shore and Bathurst" name="West" useForUI="true" branch="509/"><stop tag="14629"/><stop tag="15276"/>

<route tag="511" title="511-Bathurst" color="ff0000" oppositeColor="ffffff" latMin="43.6358899" latMax="43.6665299" lonMin="-79.41129" lonMax="-79.3998799">
<stop tag="12898" title="Fleet St At Bastion St" lat="43.6358899" lon="-79.40427" stopId="14512"/>
<direction tag="511_1_511A" title="North - 511 Bathurst towards Bathurst Station" name="North" useForUI="true" branch="511"><stop tag="12898"/>

[Fleet St At Bastion St]
509-Harbourfront
West - 509/511 Replacement Bus towards Lake Shore and Bathurst

511-Bathrust
North - 511 Bathurst towards Bathurst Station


Direction N-N Stop

Route 1-N Direction
Route 1-N Stop


?lat=...&lon=...

S



[
  {
    section_title: ''
    items: [
      { title: '', subtitle: '', uri: '' }
      { title: '', subtitle: '', uri: '' }
      { title: '', subtitle: '', uri: '' }
    ]
  },


]
